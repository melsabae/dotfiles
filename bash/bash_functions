function ps1_date {
    date +%H:%M:%S
}

function ps1_dir {
    local depth=2
    python -c "print(\"/\".join(\"$PWD\".split(\"/\")[-$depth:]))"
}

function ps1_hostname {
    # currently, the machines this runs on does not need a transformation
    hostname
}

function ps1_branch {
    local branch=$(git status -uno 2>/dev/null | head -1 | rev | cut -f1 -d' ' | cut -f1 -d'/' | rev) || return 0
    echo $branch
}

function ps1_branch_color {
    # dependent on my gitconfig
    local branch=$(ps1_branch)

    if [[ "$branch" = "" ]]; then
        echo ""
        return 0
    fi

    local status=$(git ls 2>/dev/null) || return 0

    # there exists an unstaged modification to a tracked file
    if [[ $status =~ ^\ M || $status =~ ^MM ]]; then
        local color="\e[0;30;41m"
    # there is an untracked file present that is not in the .gitignore
    elif [[ $status =~ ^\?\? ]]; then
        local color="\e[0;30;43m"
    # all tracked files with modifications are staged
    elif [[ $status =~ ^A || $status =~ ^M ]]; then
        local color="\e[0;30;42m"
    # clean head
    else
        local color="\e[1;37;40m"
    fi

    echo " $color$branch"
}

function ps1_error {
    echo "$?"
}

function ps1_generator {
    local reset="\e[0m"
    local errnum="$?"

    local hostname="\e[2;37;40m$(ps1_hostname)$reset"
    local dir="\e[0;34;40m$(ps1_dir)$reset"
    local branch="$(ps1_branch_color)$reset"
    local date="\e[2;37;40m$(ps1_date)$reset"

    if [ "$errnum" = "0" ]; then
        local err="$reset"
    else
        local err="$errnum "
    fi

    PS1="$hostname{$dir$branch} $date $err"
}

